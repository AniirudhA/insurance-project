pipeline 
{
  agent any
    tools{
      maven 'M2_HOME'
          }
   stages 
  {
    stage('Git checkout') 
    {
      steps  
        {
          echo 'This for only clonning the git repository'
          git 'https://github.com/AniirudhA/insurance-project.git'
        }
    }
    stage('Maven Package') 
    {
      steps 
        {
          echo 'This for Packaging the application'
          sh 'mvn package'
        }
    }
    stage('Test Results') 
    {
      steps 
        {
          echo 'This for Testing the results of application'
          publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, icon: '', keepAll: false, reportDir: '/var/lib/jenkins/workspace/Insure-ME/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
        }
      }
    stage('Generating Docker Image') 
    {
      steps 
        {
          echo 'This is to build Docker Image'
          sh 'docker build -t aniirudh/insure-meproject .'
        }
      }
    stage('Logging to DOCKER HUB') 
    {
      steps 
        {
          echo 'This is to build Docker Image'
          withCredentials([usernamePassword(credentialsId: 'dockerhub-pwd', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
          sh "echo $PASS | docker login -u $USER --password-stdin"
          sh 'docker push aniirudh/insure-meproject'  
          }
        }
      }
     stage('Ansible Playbook') 
    {
      steps 
        {
          echo 'Deploying the Application using Ansible'
          ansiblePlaybook credentialsId: 'sshkey', disableHostKeyChecking: true, installation: 'Ansible', inventory: '/etc/ansible/hosts', playbook: 'deployment.yml', vaultTmpPath: ''
  }
}
}
